La configuration de Prometheus est YAML . Le téléchargement Prometheus est livré avec un exemple 
de configuration dans un fichier appelé prometheus.yml

EX :

global:
  scrape_interval:     15s
  evaluation_interval: 15s

rule_files:
  # - "first.rules"
  # - "second.rules"

scrape_configs:
  - job_name: prometheus
    static_configs:
      - targets: ['localhost:9090']

Il y a trois blocs de configuration dans l'exemple fichier de configuration: global, rule_fileset scrape_configs.

	Le globalbloc contrôle la configuration globale du serveur Prometheus. Nous avons deux options présentes. 
Le premier scrape_intervalcontrôle la fréquence à laquelle Prométhée grattera les cibles. Vous pouvez remplacer cela 
pour des cibles individuelles. Dans ce cas, le paramètre global est de gratter toutes les 15 secondes. 
L' evaluation_intervaloption contrôle la fréquence à laquelle Prometheus évaluera les règles. Prometheus utilise 
des règles pour créer de nouvelles séries chronologiques et pour générer des alertes.

	Le rule_filesbloc spécifie l'emplacement de toutes les règles que nous voulons que le serveur Prometheus charge. 
Pour l'instant, nous n'avons pas de règles.

	Le dernier bloc scrape_configscontrôle les ressources surveillées par Prometheus. Étant donné que Prometheus 
expose également des données sur lui-même en tant que point de terminaison HTTP, il peut gratter et surveiller sa propre santé. 
Dans la configuration par défaut, il existe un seul travail, appelé prometheus, qui gratte les données de séries chronologiques 
exposées par le serveur Prometheus. Le travail contient une seule cible configurée de manière statique, localhostle port on 9090. 
Prometheus s'attend à ce que les métriques soient disponibles sur les cibles sur un chemin de /metrics. Donc, cette tâche par défaut 
est grattée via l'URL: http://localhost:9090 metrics .



Pour plus d'options dans le fichier de configurantion veuillez consulter le site de prometheus: 
	https://prometheus.io/docs/prometheus/latest/configuration/configuration/
